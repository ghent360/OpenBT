diff -rupN glog-0.3.3/src/demangle_unittest.cc /home/vne-marti/raspi/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/glog-0.3.3/src/demangle_unittest.cc
--- glog-0.3.3/src/demangle_unittest.cc	2012-01-11 01:14:17.000000000 -0800
+++ /home/vne-marti/raspi/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/glog-0.3.3/src/demangle_unittest.cc	2014-11-27 03:38:33.109148743 -0800
@@ -120,7 +120,7 @@ TEST(Demangle, FromFile) {
 
 int main(int argc, char **argv) {
 #ifdef HAVE_LIB_GFLAGS
-  ParseCommandLineFlags(&argc, &argv, true);
+  gflags::ParseCommandLineFlags(&argc, &argv, true);
 #endif
   InitGoogleTest(&argc, argv);
 
diff -rupN glog-0.3.3/src/googletest.h /home/vne-marti/raspi/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/glog-0.3.3/src/googletest.h
--- glog-0.3.3/src/googletest.h	2012-01-12 00:40:58.000000000 -0800
+++ /home/vne-marti/raspi/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/glog-0.3.3/src/googletest.h	2014-11-27 03:37:34.792859569 -0800
@@ -174,7 +174,7 @@ vector<void (*)()> g_testlist;  // the t
 #define TEST(a, b)                                      \
   struct Test_##a##_##b {                               \
     Test_##a##_##b() { g_testlist.push_back(&Run); }    \
-    static void Run() { FlagSaver fs; RunTest(); }      \
+    static void Run() { gflags::FlagSaver fs; RunTest(); }      \
     static void RunTest();                              \
   };                                                    \
   static Test_##a##_##b g_test_##a##_##b;               \
diff -rupN glog-0.3.3/src/logging_unittest.cc /home/vne-marti/raspi/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/glog-0.3.3/src/logging_unittest.cc
--- glog-0.3.3/src/logging_unittest.cc	2013-01-30 20:39:40.000000000 -0800
+++ /home/vne-marti/raspi/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/glog-0.3.3/src/logging_unittest.cc	2014-11-27 03:40:13.205645095 -0800
@@ -176,7 +176,7 @@ BENCHMARK(BM_vlog);
 int main(int argc, char **argv) {
   FLAGS_colorlogtostderr = false;
 #ifdef HAVE_LIB_GFLAGS
-  ParseCommandLineFlags(&argc, &argv, true);
+  gflags::ParseCommandLineFlags(&argc, &argv, true);
 #endif
   // Make sure stderr is not buffered as stderr seems to be buffered
   // on recent windows.
@@ -305,7 +305,7 @@ void TestRawLogging() {
   string* foo = new string("foo ");
   string huge_str(50000, 'a');
 
-  FlagSaver saver;
+  gflags::FlagSaver saver;
 
   // Check that RAW loggging does not use mallocs.
   NewHook new_hook;
@@ -360,7 +360,7 @@ void LogWithLevels(int v, int severity,
           "Test: v=%d stderrthreshold=%d logtostderr=%d alsologtostderr=%d",
           v, severity, err, alsoerr);
 
-  FlagSaver saver;
+  gflags::FlagSaver saver;
 
   FLAGS_v = v;
   FLAGS_stderrthreshold = severity;
diff -rupN glog-0.3.3/src/signalhandler_unittest.cc /home/vne-marti/raspi/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/glog-0.3.3/src/signalhandler_unittest.cc
--- glog-0.3.3/src/signalhandler_unittest.cc	2012-01-11 01:14:17.000000000 -0800
+++ /home/vne-marti/raspi/OpenELEC.tv/build.OpenELEC-RPi.arm-devel/glog-0.3.3/src/signalhandler_unittest.cc	2014-11-27 03:40:52.785841363 -0800
@@ -67,7 +67,7 @@ int main(int argc, char **argv) {
 #if defined(HAVE_STACKTRACE) && defined(HAVE_SYMBOLIZE)
   InitGoogleLogging(argv[0]);
 #ifdef HAVE_LIB_GFLAGS
-  ParseCommandLineFlags(&argc, &argv, true);
+  gflags::ParseCommandLineFlags(&argc, &argv, true);
 #endif
   InstallFailureSignalHandler();
   const std::string command = argc > 1 ? argv[1] : "none";
